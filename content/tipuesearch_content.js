var tipuesearch = {"pages": [{'title': 'About', 'text': 'repo:  https://github.com/mdecourse-org/workstation-scrum-1 \n site:  https://mdecourse-org.github.io/workstation-scrum-1 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cad2 動態主機', 'text': "每一個網站分配兩個 ports 例如: 9003 為內部使用, 8003 為外部使用. \n 管理者處理項目: \n 針對 9003 與 8003 ports 開放使用必須執行: \n 將 ports 納入 stunnel.conf 中的設定後, 以 sudo /etc/init.d/stunnel4 restart \n 開放 ufw 讓防火牆通過 8003: sudo ufw allow 8003 \n 接受使用 9003 當內部 port, 8003 當外部 port 的用戶: \n ssh 遠端登入 cad2_cycu 主機 \n 以 SSH 協定 或 https token 格式 git clone 將要使用 9003 與 8003 ports 的倉儲取到帳號對應的目錄下 \n 以 vi server.py 編輯檔案, 設定所分配到的 9003, 檔案內容如下: \n from waitress import serve\nfrom cmsimde import flaskapp\n# 宣告要使用內部分配到的 9003 port 啟用動態網站\nserve(flaskapp.app, listen='127.0.0.1:9003', threads=8) \n 利用 chmod u+x acp 讓 acp 檔案能讓使用執行 \n 利用 hupper -m server.py 嘗試啟動, 是否 8003 port 已經可以擷取到動態網站, 若是, 則儘快變更管理者密碼 \n 若採 SSH 協定執行 git clone 與 git push 者,\xa0 則需以 ssh-keygen 建立 .ssh/id_rsa private key, 以及\xa0 id_rsa.pub public key,\xa0 然後以 sftp 將 id_rsa.pub 取到近端後送到 Github 帳號下進行登記 (鎖頭登記). \n 接著因為 cad2_cycu 僅支援 IPv6, 因此必須在 .ssh 下設定 config 檔案如下, 此舉等同 Windows 環境下設定 SSH 對應的\xa0 Github session: \n Host github.com\nUser git\nHostname github.com\nProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n \n", 'tags': '', 'url': 'cad2 動態主機.html'}, {'title': 'Brython', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};